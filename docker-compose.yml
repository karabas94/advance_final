version: "3"

services:
  store_db:
    container_name: store_db
    image: postgres:latest
    restart: always
    env_file:
      - store.env
    expose:
      - 5432
    volumes:
      - store_db_volume:/var/lib/postgresql/data
    networks:
      - webnet

  shop_db:
    container_name: shop_db
    image: postgres:latest
    restart: always
    env_file:
      - shop.env
    expose:
      - 5432
    volumes:
      - shop_db_volume:/var/lib/postgresql/data
    networks:
      - webnet

  store:
    container_name: store
    build:
      context: .
      dockerfile: docker/store/Dockerfile
    env_file:
      - store.env
    command: sh runserver.sh
    volumes:
      - ./store:/app
    expose:
      - 8001
    depends_on:
      - store_db
    networks:
      - webnet
      - nginx_network
    restart: on-failure

  shop:
    container_name: shop
    build:
      context: .
      dockerfile: docker/shop/Dockerfile
    env_file:
      - shop.env
    command: sh runserver.sh
    volumes:
      - ./shop:/app
    expose:
      - 8000
    depends_on:
      - shop_db
    networks:
      - webnet
      - nginx_network
    restart: on-failure


  redis:
    container_name: redis
    image: redis:6.2.1-alpine
    restart: on-failure
    networks:
      - webnet
    expose:
      - 6379


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-alpine
    restart: on-failure
    networks:
      - webnet
    expose:
      - 4369
      - 5671
      - 5672
      - 15672
      - 25672

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: docker/shop/Dockerfile
    env_file:
      - shop.env
    depends_on:
      - rabbitmq
      - redis
      - shop
      - shop_db
    expose: []
    networks:
      - webnet
      - nginx_network
    restart: on-failure
    command: celery -A core worker -B -l INFO

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    command: [ "-smtp-bind-addr", "0.0.0.0:25" ]
    user: root
    restart: on-failure
    logging:
      driver: 'none'
    ports:
      - 1025
      - 8025
    networks:
      - webnet
      - nginx_network
    expose:
      - 25
      - 8025

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: on-failure
    networks:
      - nginx_network
    ports:
      - 80:80
      - 8001:8001
      - 8025:8025
    depends_on:
      - store
      - shop
      - mailhog

volumes:
  store_db_volume:
  shop_db_volume:

networks:
  webnet:
  nginx_network:
